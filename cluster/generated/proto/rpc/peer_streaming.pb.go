// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer_streaming.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VectorPartyMetaData struct {
	ColumnId             uint32   `protobuf:"varint,1,opt,name=column_id,json=columnId,proto3" json:"column_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorPartyMetaData) Reset()         { *m = VectorPartyMetaData{} }
func (m *VectorPartyMetaData) String() string { return proto.CompactTextString(m) }
func (*VectorPartyMetaData) ProtoMessage()    {}
func (*VectorPartyMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{0}
}

func (m *VectorPartyMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorPartyMetaData.Unmarshal(m, b)
}
func (m *VectorPartyMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorPartyMetaData.Marshal(b, m, deterministic)
}
func (m *VectorPartyMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorPartyMetaData.Merge(m, src)
}
func (m *VectorPartyMetaData) XXX_Size() int {
	return xxx_messageInfo_VectorPartyMetaData.Size(m)
}
func (m *VectorPartyMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorPartyMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_VectorPartyMetaData proto.InternalMessageInfo

func (m *VectorPartyMetaData) GetColumnId() uint32 {
	if m != nil {
		return m.ColumnId
	}
	return 0
}

type BatchMetaDataRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Shard                uint32   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	StartBatchId         int32    `protobuf:"varint,3,opt,name=start_batch_id,json=startBatchId,proto3" json:"start_batch_id,omitempty"`
	EndBatchId           int32    `protobuf:"varint,4,opt,name=end_batch_id,json=endBatchId,proto3" json:"end_batch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchMetaDataRequest) Reset()         { *m = BatchMetaDataRequest{} }
func (m *BatchMetaDataRequest) String() string { return proto.CompactTextString(m) }
func (*BatchMetaDataRequest) ProtoMessage()    {}
func (*BatchMetaDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{1}
}

func (m *BatchMetaDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchMetaDataRequest.Unmarshal(m, b)
}
func (m *BatchMetaDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchMetaDataRequest.Marshal(b, m, deterministic)
}
func (m *BatchMetaDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchMetaDataRequest.Merge(m, src)
}
func (m *BatchMetaDataRequest) XXX_Size() int {
	return xxx_messageInfo_BatchMetaDataRequest.Size(m)
}
func (m *BatchMetaDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchMetaDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchMetaDataRequest proto.InternalMessageInfo

func (m *BatchMetaDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *BatchMetaDataRequest) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *BatchMetaDataRequest) GetStartBatchId() int32 {
	if m != nil {
		return m.StartBatchId
	}
	return 0
}

func (m *BatchMetaDataRequest) GetEndBatchId() int32 {
	if m != nil {
		return m.EndBatchId
	}
	return 0
}

type BatchMetaData struct {
	Table                string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Shard                uint32                 `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	BatchId              int32                  `protobuf:"varint,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	NumColumns           uint32                 `protobuf:"varint,4,opt,name=num_columns,json=numColumns,proto3" json:"num_columns,omitempty"`
	NumRows              uint32                 `protobuf:"varint,5,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	Cutoff               uint32                 `protobuf:"varint,6,opt,name=cutoff,proto3" json:"cutoff,omitempty"`
	Seq                  uint32                 `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	Vps                  []*VectorPartyMetaData `protobuf:"bytes,8,rep,name=vps,proto3" json:"vps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BatchMetaData) Reset()         { *m = BatchMetaData{} }
func (m *BatchMetaData) String() string { return proto.CompactTextString(m) }
func (*BatchMetaData) ProtoMessage()    {}
func (*BatchMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{2}
}

func (m *BatchMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchMetaData.Unmarshal(m, b)
}
func (m *BatchMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchMetaData.Marshal(b, m, deterministic)
}
func (m *BatchMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchMetaData.Merge(m, src)
}
func (m *BatchMetaData) XXX_Size() int {
	return xxx_messageInfo_BatchMetaData.Size(m)
}
func (m *BatchMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_BatchMetaData proto.InternalMessageInfo

func (m *BatchMetaData) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *BatchMetaData) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *BatchMetaData) GetBatchId() int32 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *BatchMetaData) GetNumColumns() uint32 {
	if m != nil {
		return m.NumColumns
	}
	return 0
}

func (m *BatchMetaData) GetNumRows() uint32 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

func (m *BatchMetaData) GetCutoff() uint32 {
	if m != nil {
		return m.Cutoff
	}
	return 0
}

func (m *BatchMetaData) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *BatchMetaData) GetVps() []*VectorPartyMetaData {
	if m != nil {
		return m.Vps
	}
	return nil
}

type VectorPartyRawDataRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Shard                uint32   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	BatchId              int32    `protobuf:"varint,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Cutoff               uint32   `protobuf:"varint,4,opt,name=cutoff,proto3" json:"cutoff,omitempty"`
	Seq                  uint32   `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	ColumnId             uint32   `protobuf:"varint,6,opt,name=column_id,json=columnId,proto3" json:"column_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorPartyRawDataRequest) Reset()         { *m = VectorPartyRawDataRequest{} }
func (m *VectorPartyRawDataRequest) String() string { return proto.CompactTextString(m) }
func (*VectorPartyRawDataRequest) ProtoMessage()    {}
func (*VectorPartyRawDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{3}
}

func (m *VectorPartyRawDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorPartyRawDataRequest.Unmarshal(m, b)
}
func (m *VectorPartyRawDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorPartyRawDataRequest.Marshal(b, m, deterministic)
}
func (m *VectorPartyRawDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorPartyRawDataRequest.Merge(m, src)
}
func (m *VectorPartyRawDataRequest) XXX_Size() int {
	return xxx_messageInfo_VectorPartyRawDataRequest.Size(m)
}
func (m *VectorPartyRawDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorPartyRawDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VectorPartyRawDataRequest proto.InternalMessageInfo

func (m *VectorPartyRawDataRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *VectorPartyRawDataRequest) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *VectorPartyRawDataRequest) GetBatchId() int32 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *VectorPartyRawDataRequest) GetCutoff() uint32 {
	if m != nil {
		return m.Cutoff
	}
	return 0
}

func (m *VectorPartyRawDataRequest) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *VectorPartyRawDataRequest) GetColumnId() uint32 {
	if m != nil {
		return m.ColumnId
	}
	return 0
}

type VectorPartyRawData struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorPartyRawData) Reset()         { *m = VectorPartyRawData{} }
func (m *VectorPartyRawData) String() string { return proto.CompactTextString(m) }
func (*VectorPartyRawData) ProtoMessage()    {}
func (*VectorPartyRawData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{4}
}

func (m *VectorPartyRawData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorPartyRawData.Unmarshal(m, b)
}
func (m *VectorPartyRawData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorPartyRawData.Marshal(b, m, deterministic)
}
func (m *VectorPartyRawData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorPartyRawData.Merge(m, src)
}
func (m *VectorPartyRawData) XXX_Size() int {
	return xxx_messageInfo_VectorPartyRawData.Size(m)
}
func (m *VectorPartyRawData) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorPartyRawData.DiscardUnknown(m)
}

var xxx_messageInfo_VectorPartyRawData proto.InternalMessageInfo

func (m *VectorPartyRawData) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type LeaseGrantRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Shard                uint32   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	Ttl                  int64    `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseGrantRequest) Reset()         { *m = LeaseGrantRequest{} }
func (m *LeaseGrantRequest) String() string { return proto.CompactTextString(m) }
func (*LeaseGrantRequest) ProtoMessage()    {}
func (*LeaseGrantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{5}
}

func (m *LeaseGrantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseGrantRequest.Unmarshal(m, b)
}
func (m *LeaseGrantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseGrantRequest.Marshal(b, m, deterministic)
}
func (m *LeaseGrantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseGrantRequest.Merge(m, src)
}
func (m *LeaseGrantRequest) XXX_Size() int {
	return xxx_messageInfo_LeaseGrantRequest.Size(m)
}
func (m *LeaseGrantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseGrantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseGrantRequest proto.InternalMessageInfo

func (m *LeaseGrantRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *LeaseGrantRequest) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *LeaseGrantRequest) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type LeaseGrantResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseGrantResponse) Reset()         { *m = LeaseGrantResponse{} }
func (m *LeaseGrantResponse) String() string { return proto.CompactTextString(m) }
func (*LeaseGrantResponse) ProtoMessage()    {}
func (*LeaseGrantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{6}
}

func (m *LeaseGrantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseGrantResponse.Unmarshal(m, b)
}
func (m *LeaseGrantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseGrantResponse.Marshal(b, m, deterministic)
}
func (m *LeaseGrantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseGrantResponse.Merge(m, src)
}
func (m *LeaseGrantResponse) XXX_Size() int {
	return xxx_messageInfo_LeaseGrantResponse.Size(m)
}
func (m *LeaseGrantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseGrantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseGrantResponse proto.InternalMessageInfo

func (m *LeaseGrantResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type LeaseRenewRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Ttl                  int64    `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseRenewRequest) Reset()         { *m = LeaseRenewRequest{} }
func (m *LeaseRenewRequest) String() string { return proto.CompactTextString(m) }
func (*LeaseRenewRequest) ProtoMessage()    {}
func (*LeaseRenewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{7}
}

func (m *LeaseRenewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseRenewRequest.Unmarshal(m, b)
}
func (m *LeaseRenewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseRenewRequest.Marshal(b, m, deterministic)
}
func (m *LeaseRenewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseRenewRequest.Merge(m, src)
}
func (m *LeaseRenewRequest) XXX_Size() int {
	return xxx_messageInfo_LeaseRenewRequest.Size(m)
}
func (m *LeaseRenewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseRenewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseRenewRequest proto.InternalMessageInfo

func (m *LeaseRenewRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *LeaseRenewRequest) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type LeaseRenewResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Ttl                  int64    `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseRenewResponse) Reset()         { *m = LeaseRenewResponse{} }
func (m *LeaseRenewResponse) String() string { return proto.CompactTextString(m) }
func (*LeaseRenewResponse) ProtoMessage()    {}
func (*LeaseRenewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{8}
}

func (m *LeaseRenewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseRenewResponse.Unmarshal(m, b)
}
func (m *LeaseRenewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseRenewResponse.Marshal(b, m, deterministic)
}
func (m *LeaseRenewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseRenewResponse.Merge(m, src)
}
func (m *LeaseRenewResponse) XXX_Size() int {
	return xxx_messageInfo_LeaseRenewResponse.Size(m)
}
func (m *LeaseRenewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseRenewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseRenewResponse proto.InternalMessageInfo

func (m *LeaseRenewResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *LeaseRenewResponse) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type LeaseRevokeRequest struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseRevokeRequest) Reset()         { *m = LeaseRevokeRequest{} }
func (m *LeaseRevokeRequest) String() string { return proto.CompactTextString(m) }
func (*LeaseRevokeRequest) ProtoMessage()    {}
func (*LeaseRevokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{9}
}

func (m *LeaseRevokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseRevokeRequest.Unmarshal(m, b)
}
func (m *LeaseRevokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseRevokeRequest.Marshal(b, m, deterministic)
}
func (m *LeaseRevokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseRevokeRequest.Merge(m, src)
}
func (m *LeaseRevokeRequest) XXX_Size() int {
	return xxx_messageInfo_LeaseRevokeRequest.Size(m)
}
func (m *LeaseRevokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseRevokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseRevokeRequest proto.InternalMessageInfo

func (m *LeaseRevokeRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type LeaseRevokeResponse struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaseRevokeResponse) Reset()         { *m = LeaseRevokeResponse{} }
func (m *LeaseRevokeResponse) String() string { return proto.CompactTextString(m) }
func (*LeaseRevokeResponse) ProtoMessage()    {}
func (*LeaseRevokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b771d46e8b2ce71, []int{10}
}

func (m *LeaseRevokeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaseRevokeResponse.Unmarshal(m, b)
}
func (m *LeaseRevokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaseRevokeResponse.Marshal(b, m, deterministic)
}
func (m *LeaseRevokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaseRevokeResponse.Merge(m, src)
}
func (m *LeaseRevokeResponse) XXX_Size() int {
	return xxx_messageInfo_LeaseRevokeResponse.Size(m)
}
func (m *LeaseRevokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaseRevokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaseRevokeResponse proto.InternalMessageInfo

func (m *LeaseRevokeResponse) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func init() {
	proto.RegisterType((*VectorPartyMetaData)(nil), "rpc.VectorPartyMetaData")
	proto.RegisterType((*BatchMetaDataRequest)(nil), "rpc.BatchMetaDataRequest")
	proto.RegisterType((*BatchMetaData)(nil), "rpc.BatchMetaData")
	proto.RegisterType((*VectorPartyRawDataRequest)(nil), "rpc.VectorPartyRawDataRequest")
	proto.RegisterType((*VectorPartyRawData)(nil), "rpc.VectorPartyRawData")
	proto.RegisterType((*LeaseGrantRequest)(nil), "rpc.LeaseGrantRequest")
	proto.RegisterType((*LeaseGrantResponse)(nil), "rpc.LeaseGrantResponse")
	proto.RegisterType((*LeaseRenewRequest)(nil), "rpc.LeaseRenewRequest")
	proto.RegisterType((*LeaseRenewResponse)(nil), "rpc.LeaseRenewResponse")
	proto.RegisterType((*LeaseRevokeRequest)(nil), "rpc.LeaseRevokeRequest")
	proto.RegisterType((*LeaseRevokeResponse)(nil), "rpc.LeaseRevokeResponse")
}

func init() { proto.RegisterFile("peer_streaming.proto", fileDescriptor_7b771d46e8b2ce71) }

var fileDescriptor_7b771d46e8b2ce71 = []byte{
	// 544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdf, 0x6e, 0xd3, 0x3c,
	0x14, 0x6f, 0x9a, 0xa5, 0xed, 0xce, 0xda, 0x69, 0xf3, 0xaa, 0x7d, 0x69, 0x3f, 0x09, 0x2a, 0xab,
	0x48, 0xd5, 0x2e, 0xaa, 0xa9, 0x08, 0x2e, 0x90, 0xe0, 0x02, 0x0a, 0xa8, 0x12, 0xa0, 0xe2, 0x0b,
	0x6e, 0x2b, 0x37, 0x39, 0xa3, 0xd3, 0x5a, 0x27, 0xb3, 0x9d, 0x55, 0xbc, 0x02, 0x6f, 0xc2, 0x6b,
	0x71, 0xc5, 0x63, 0xa0, 0x38, 0xe9, 0x92, 0x34, 0x01, 0x89, 0xdd, 0xc5, 0xe7, 0xfc, 0xce, 0xef,
	0x8f, 0x63, 0x1b, 0xba, 0x21, 0xa2, 0x5c, 0x28, 0x2d, 0x91, 0x6f, 0xae, 0xc5, 0xd7, 0x71, 0x28,
	0x03, 0x1d, 0x10, 0x5b, 0x86, 0x1e, 0x9d, 0xc0, 0xd9, 0x17, 0xf4, 0x74, 0x20, 0xe7, 0x5c, 0xea,
	0x6f, 0x1f, 0x51, 0xf3, 0x29, 0xd7, 0x9c, 0xfc, 0x0f, 0x87, 0x5e, 0xb0, 0x8e, 0x36, 0x62, 0x71,
	0xed, 0xbb, 0xd6, 0xc0, 0x1a, 0x75, 0x58, 0x2b, 0x29, 0xcc, 0x7c, 0xfa, 0xdd, 0x82, 0xee, 0x6b,
	0xae, 0xbd, 0xd5, 0x0e, 0xce, 0xf0, 0x36, 0x42, 0xa5, 0x49, 0x17, 0x1c, 0xcd, 0x97, 0x6b, 0x34,
	0x13, 0x87, 0x2c, 0x59, 0xc4, 0x55, 0xb5, 0xe2, 0xd2, 0x77, 0xeb, 0x86, 0x27, 0x59, 0x90, 0x21,
	0x1c, 0x2b, 0xcd, 0xa5, 0x5e, 0x2c, 0x63, 0xa6, 0x58, 0xc6, 0x1e, 0x58, 0x23, 0x87, 0xb5, 0x4d,
	0xd5, 0xd0, 0xcf, 0x7c, 0x32, 0x80, 0x36, 0x0a, 0x3f, 0xc3, 0x1c, 0x18, 0x0c, 0xa0, 0xf0, 0x53,
	0x04, 0xfd, 0x65, 0x41, 0xa7, 0x60, 0xe6, 0x9f, 0x5c, 0xf4, 0xa0, 0xb5, 0xa7, 0xdf, 0x5c, 0xa6,
	0xd2, 0x8f, 0xe1, 0x48, 0x44, 0x9b, 0x45, 0x92, 0x5a, 0x19, 0xe5, 0x0e, 0x03, 0x11, 0x6d, 0xde,
	0x24, 0x95, 0x78, 0x36, 0x06, 0xc8, 0x60, 0xab, 0x5c, 0xc7, 0x74, 0x9b, 0x22, 0xda, 0xb0, 0x60,
	0xab, 0xc8, 0x39, 0x34, 0xbc, 0x48, 0x07, 0x57, 0x57, 0x6e, 0xc3, 0x34, 0xd2, 0x15, 0x39, 0x01,
	0x5b, 0xe1, 0xad, 0xdb, 0x34, 0xc5, 0xf8, 0x93, 0x5c, 0x80, 0x7d, 0x17, 0x2a, 0xb7, 0x35, 0xb0,
	0x47, 0x47, 0x13, 0x77, 0x2c, 0x43, 0x6f, 0x5c, 0xf1, 0x3f, 0x58, 0x0c, 0xa2, 0x3f, 0x2c, 0xe8,
	0xe5, 0x9a, 0x8c, 0x6f, 0x1f, 0xba, 0xf9, 0x7f, 0x89, 0x9d, 0x59, 0x3f, 0xa8, 0xb2, 0xee, 0x64,
	0xd6, 0x0b, 0x67, 0xa4, 0xb1, 0x77, 0x46, 0x2e, 0x80, 0x94, 0xad, 0xc6, 0x6e, 0xbc, 0x55, 0x24,
	0x6e, 0x8c, 0xc7, 0x36, 0x4b, 0x16, 0xf4, 0x33, 0x9c, 0x7e, 0x40, 0xae, 0xf0, 0xbd, 0xe4, 0x42,
	0x3f, 0x24, 0xce, 0x09, 0xd8, 0x5a, 0xaf, 0x4d, 0x12, 0x9b, 0xc5, 0x9f, 0x74, 0x08, 0x24, 0x4f,
	0xa9, 0xc2, 0x40, 0x28, 0x24, 0xc7, 0x50, 0x9f, 0x4d, 0x0d, 0xa1, 0xcd, 0xea, 0xb3, 0x29, 0x7d,
	0x96, 0x0a, 0x33, 0x14, 0xb8, 0xdd, 0x09, 0xef, 0x81, 0x76, 0xe4, 0xf5, 0x8c, 0xfc, 0x79, 0x4a,
	0x9e, 0x8e, 0x55, 0x93, 0x57, 0xcc, 0x0d, 0xef, 0xe7, 0xee, 0x82, 0x1b, 0xfc, 0x83, 0x1e, 0x7d,
	0x02, 0x67, 0x05, 0x54, 0x35, 0xfd, 0xe4, 0x67, 0x1d, 0xda, 0x73, 0x44, 0x19, 0xef, 0xeb, 0xa7,
	0xc0, 0x47, 0xf2, 0x02, 0x1c, 0x93, 0x96, 0x9c, 0x9b, 0x53, 0x54, 0xda, 0xd1, 0xfe, 0x7f, 0xa5,
	0x7a, 0x42, 0x4d, 0x6b, 0xe4, 0x15, 0x38, 0x26, 0x4c, 0x7e, 0x36, 0xbf, 0x29, 0xf9, 0xd9, 0x42,
	0x6a, 0x5a, 0x1b, 0x59, 0x97, 0x16, 0x79, 0x09, 0x8d, 0xc4, 0x2e, 0x29, 0x00, 0x73, 0x31, 0xfb,
	0x6e, 0xb9, 0x71, 0x2f, 0xff, 0x16, 0xc8, 0x3b, 0xd4, 0xde, 0xaa, 0x78, 0x8f, 0x7b, 0x66, 0xa2,
	0xea, 0xa1, 0xe9, 0x93, 0x72, 0x8b, 0xd6, 0xc8, 0x1c, 0x4e, 0x33, 0x1a, 0x03, 0xe7, 0x5b, 0xf2,
	0x68, 0xff, 0x4e, 0x15, 0xaf, 0x4d, 0x9a, 0xac, 0xdc, 0xa7, 0xb5, 0x4b, 0x6b, 0xd9, 0x30, 0x2f,
	0xe5, 0xd3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x63, 0x41, 0x56, 0x41, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PeerDataNodeClient is the client API for PeerDataNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeerDataNodeClient interface {
	Grant(ctx context.Context, in *LeaseGrantRequest, opts ...grpc.CallOption) (*LeaseGrantResponse, error)
	Renew(ctx context.Context, opts ...grpc.CallOption) (PeerDataNode_RenewClient, error)
	Revoke(ctx context.Context, in *LeaseRevokeRequest, opts ...grpc.CallOption) (*LeaseRevokeResponse, error)
	FetchBatchMetaData(ctx context.Context, in *BatchMetaDataRequest, opts ...grpc.CallOption) (*BatchMetaData, error)
	FetchBatchDataRaw(ctx context.Context, in *VectorPartyRawDataRequest, opts ...grpc.CallOption) (PeerDataNode_FetchBatchDataRawClient, error)
}

type peerDataNodeClient struct {
	cc *grpc.ClientConn
}

func NewPeerDataNodeClient(cc *grpc.ClientConn) PeerDataNodeClient {
	return &peerDataNodeClient{cc}
}

func (c *peerDataNodeClient) Grant(ctx context.Context, in *LeaseGrantRequest, opts ...grpc.CallOption) (*LeaseGrantResponse, error) {
	out := new(LeaseGrantResponse)
	err := c.cc.Invoke(ctx, "/rpc.PeerDataNode/Grant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerDataNodeClient) Renew(ctx context.Context, opts ...grpc.CallOption) (PeerDataNode_RenewClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PeerDataNode_serviceDesc.Streams[0], "/rpc.PeerDataNode/Renew", opts...)
	if err != nil {
		return nil, err
	}
	x := &peerDataNodeRenewClient{stream}
	return x, nil
}

type PeerDataNode_RenewClient interface {
	Send(*LeaseRenewRequest) error
	Recv() (*LeaseRenewResponse, error)
	grpc.ClientStream
}

type peerDataNodeRenewClient struct {
	grpc.ClientStream
}

func (x *peerDataNodeRenewClient) Send(m *LeaseRenewRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *peerDataNodeRenewClient) Recv() (*LeaseRenewResponse, error) {
	m := new(LeaseRenewResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *peerDataNodeClient) Revoke(ctx context.Context, in *LeaseRevokeRequest, opts ...grpc.CallOption) (*LeaseRevokeResponse, error) {
	out := new(LeaseRevokeResponse)
	err := c.cc.Invoke(ctx, "/rpc.PeerDataNode/Revoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerDataNodeClient) FetchBatchMetaData(ctx context.Context, in *BatchMetaDataRequest, opts ...grpc.CallOption) (*BatchMetaData, error) {
	out := new(BatchMetaData)
	err := c.cc.Invoke(ctx, "/rpc.PeerDataNode/FetchBatchMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerDataNodeClient) FetchBatchDataRaw(ctx context.Context, in *VectorPartyRawDataRequest, opts ...grpc.CallOption) (PeerDataNode_FetchBatchDataRawClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PeerDataNode_serviceDesc.Streams[1], "/rpc.PeerDataNode/FetchBatchDataRaw", opts...)
	if err != nil {
		return nil, err
	}
	x := &peerDataNodeFetchBatchDataRawClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PeerDataNode_FetchBatchDataRawClient interface {
	Recv() (*VectorPartyRawData, error)
	grpc.ClientStream
}

type peerDataNodeFetchBatchDataRawClient struct {
	grpc.ClientStream
}

func (x *peerDataNodeFetchBatchDataRawClient) Recv() (*VectorPartyRawData, error) {
	m := new(VectorPartyRawData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PeerDataNodeServer is the server API for PeerDataNode service.
type PeerDataNodeServer interface {
	Grant(context.Context, *LeaseGrantRequest) (*LeaseGrantResponse, error)
	Renew(PeerDataNode_RenewServer) error
	Revoke(context.Context, *LeaseRevokeRequest) (*LeaseRevokeResponse, error)
	FetchBatchMetaData(context.Context, *BatchMetaDataRequest) (*BatchMetaData, error)
	FetchBatchDataRaw(*VectorPartyRawDataRequest, PeerDataNode_FetchBatchDataRawServer) error
}

func RegisterPeerDataNodeServer(s *grpc.Server, srv PeerDataNodeServer) {
	s.RegisterService(&_PeerDataNode_serviceDesc, srv)
}

func _PeerDataNode_Grant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaseGrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerDataNodeServer).Grant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PeerDataNode/Grant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerDataNodeServer).Grant(ctx, req.(*LeaseGrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerDataNode_Renew_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PeerDataNodeServer).Renew(&peerDataNodeRenewServer{stream})
}

type PeerDataNode_RenewServer interface {
	Send(*LeaseRenewResponse) error
	Recv() (*LeaseRenewRequest, error)
	grpc.ServerStream
}

type peerDataNodeRenewServer struct {
	grpc.ServerStream
}

func (x *peerDataNodeRenewServer) Send(m *LeaseRenewResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *peerDataNodeRenewServer) Recv() (*LeaseRenewRequest, error) {
	m := new(LeaseRenewRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PeerDataNode_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaseRevokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerDataNodeServer).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PeerDataNode/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerDataNodeServer).Revoke(ctx, req.(*LeaseRevokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerDataNode_FetchBatchMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerDataNodeServer).FetchBatchMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PeerDataNode/FetchBatchMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerDataNodeServer).FetchBatchMetaData(ctx, req.(*BatchMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeerDataNode_FetchBatchDataRaw_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VectorPartyRawDataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PeerDataNodeServer).FetchBatchDataRaw(m, &peerDataNodeFetchBatchDataRawServer{stream})
}

type PeerDataNode_FetchBatchDataRawServer interface {
	Send(*VectorPartyRawData) error
	grpc.ServerStream
}

type peerDataNodeFetchBatchDataRawServer struct {
	grpc.ServerStream
}

func (x *peerDataNodeFetchBatchDataRawServer) Send(m *VectorPartyRawData) error {
	return x.ServerStream.SendMsg(m)
}

var _PeerDataNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PeerDataNode",
	HandlerType: (*PeerDataNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Grant",
			Handler:    _PeerDataNode_Grant_Handler,
		},
		{
			MethodName: "Revoke",
			Handler:    _PeerDataNode_Revoke_Handler,
		},
		{
			MethodName: "FetchBatchMetaData",
			Handler:    _PeerDataNode_FetchBatchMetaData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Renew",
			Handler:       _PeerDataNode_Renew_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "FetchBatchDataRaw",
			Handler:       _PeerDataNode_FetchBatchDataRaw_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "peer_streaming.proto",
}
