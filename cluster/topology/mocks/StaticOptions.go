// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import shard "github.com/uber/aresdb/cluster/shard"
import topology "github.com/uber/aresdb/cluster/topology"

// StaticOptions is an autogenerated mock type for the StaticOptions type
type StaticOptions struct {
	mock.Mock
}

// HostShardSets provides a mock function with given fields:
func (_m *StaticOptions) HostShardSets() []topology.HostShardSet {
	ret := _m.Called()

	var r0 []topology.HostShardSet
	if rf, ok := ret.Get(0).(func() []topology.HostShardSet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]topology.HostShardSet)
		}
	}

	return r0
}

// Replicas provides a mock function with given fields:
func (_m *StaticOptions) Replicas() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// SetHostShardSets provides a mock function with given fields: value
func (_m *StaticOptions) SetHostShardSets(value []topology.HostShardSet) topology.StaticOptions {
	ret := _m.Called(value)

	var r0 topology.StaticOptions
	if rf, ok := ret.Get(0).(func([]topology.HostShardSet) topology.StaticOptions); ok {
		r0 = rf(value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(topology.StaticOptions)
		}
	}

	return r0
}

// SetReplicas provides a mock function with given fields: value
func (_m *StaticOptions) SetReplicas(value int) topology.StaticOptions {
	ret := _m.Called(value)

	var r0 topology.StaticOptions
	if rf, ok := ret.Get(0).(func(int) topology.StaticOptions); ok {
		r0 = rf(value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(topology.StaticOptions)
		}
	}

	return r0
}

// SetShardSet provides a mock function with given fields: value
func (_m *StaticOptions) SetShardSet(value shard.ShardSet) topology.StaticOptions {
	ret := _m.Called(value)

	var r0 topology.StaticOptions
	if rf, ok := ret.Get(0).(func(shard.ShardSet) topology.StaticOptions); ok {
		r0 = rf(value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(topology.StaticOptions)
		}
	}

	return r0
}

// ShardSet provides a mock function with given fields:
func (_m *StaticOptions) ShardSet() shard.ShardSet {
	ret := _m.Called()

	var r0 shard.ShardSet
	if rf, ok := ret.Get(0).(func() shard.ShardSet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(shard.ShardSet)
		}
	}

	return r0
}

// Validate provides a mock function with given fields:
func (_m *StaticOptions) Validate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
