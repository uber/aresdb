// Code generated by mockery v1.0.0
package mocks

import common "github.com/uber/aresdb/query/common"
import context "context"
import mock "github.com/stretchr/testify/mock"
import query "github.com/uber/aresdb/query"
import topology "github.com/uber/aresdb/cluster/topology"

// DataNodeClient is an autogenerated mock type for the DataNodeClient type
type DataNodeClient struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, host, _a2
func (_m *DataNodeClient) Fetch(ctx context.Context, host topology.Host, _a2 query.AQLQuery) (common.AQLQueryResult, error) {
	ret := _m.Called(ctx, host, _a2)

	var r0 common.AQLQueryResult
	if rf, ok := ret.Get(0).(func(context.Context, topology.Host, query.AQLQuery) common.AQLQueryResult); ok {
		r0 = rf(ctx, host, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.AQLQueryResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, topology.Host, query.AQLQuery) error); ok {
		r1 = rf(ctx, host, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
